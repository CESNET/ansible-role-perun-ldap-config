- assert:
    that:
      - perun_ldap_schemas_perun_version is defined
      - perun_ldap_access_rules_additional is defined
      - perun_ldap_domain is defined

- name: "set cn=config attribute olcAttributeOptions: x-ns-"
  ldap_attrs:
    dn: cn=config
    attributes:
      olcAttributeOptions: "x-ns-"
    state: present

- name: "create perun-specific LDAP schemas"
  when: not perun_ldap_slave_replica
  block:
    - name: "create entry for schema perun"
      ldap_entry:
        dn: cn={4}perun,cn=schema,cn=config
        objectClass: olcSchemaConfig
      register: perun_schema_entry
    - name: "download schema perun file version {{ perun_ldap_schemas_perun_version }}"
      get_url:
        url: "https://raw.githubusercontent.com/CESNET/perun/{{ perun_ldap_schemas_perun_version }}/perun-utils/ldapc-scripts/schemas/perun-schema.ldif"
        dest: "/etc/ldap/perun-schema.ldif"
        force: yes
      register: perun_schema_file
    - name: "set up schema perun"
      command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  /etc/ldap/perun-schema.ldif"
      when: perun_schema_entry.changed or perun_schema_file.changed

    - name: "create entry for schema inetUser"
      ldap_entry:
        dn: cn={5}inetUser,cn=schema,cn=config
        objectClass: olcSchemaConfig
      register: inetUser_schema_entry
    - name: "download schema inetUser file version {{ perun_ldap_schemas_perun_version }}"
      get_url:
        url: "https://raw.githubusercontent.com/CESNET/perun/{{ perun_ldap_schemas_perun_version }}/perun-utils/ldapc-scripts/schemas/inetUser-schema.ldif"
        dest: "/etc/ldap/inetUser-schema.ldif"
        force: yes
      register: inetUser_schema_file
    - name: "set up schema inetUser"
      command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  /etc/ldap/inetUser-schema.ldif"
      when: inetUser_schema_entry.changed or inetUser_schema_file.changed

    - name: "create entry for schema tenOperEntry"
      ldap_entry:
        dn: cn={6}tenOperEntry,cn=schema,cn=config
        objectClass: olcSchemaConfig
      register: tenOperEntry_schema_entry
    - name: "download schema tenOperEntry file version {{ perun_ldap_schemas_perun_version }}"
      get_url:
        url: "https://raw.githubusercontent.com/CESNET/perun/{{ perun_ldap_schemas_perun_version }}/perun-utils/ldapc-scripts/schemas/tenOperEntry-schema.ldif"
        dest: "/etc/ldap/tenOperEntry-schema.ldif"
        force: yes
      register: tenOperEntry_schema_file
    - name: "set up schema tenOperEntry"
      command: "/usr/bin/ldapmodify -Q -H ldapi:/// -Y EXTERNAL -f  /etc/ldap/tenOperEntry-schema.ldif"
      when: tenOperEntry_schema_entry.changed or tenOperEntry_schema_file.changed

- name: "set indexes (olcDbIndex attribute)"
  ldap_attrs:
    dn: olcDatabase={1}mdb,cn=config
    attributes:
      olcDbIndex:
        - cn,uid eq
        - member,memberUid eq
        - objectClass eq
        - uidNumber,gidNumber eq
        - perunVoId eq
        - eduPersonPrincipalNames eq
        - entryCSN,entryUUID eq
        - login eq
        - memberOfPerunVo eq
        - userCertificateSubject eq
        - entityID eq
        - assignedToResourceId eq
        - userIdentities eq
        - OIDCClientID eq
        - perunFacilityId eq
        - perunFacilityDn eq
        - perunUserId eq
        - perunGroupId eq
        - assignedGroupId eq
    state: exact

- name: "LDAP access rules"
  block:
    - name: "LDAP access rules empty"
      set_fact:
        olcAccess_values: []
        oldAccess_replication:
          - >-
            to dn.subtree="{{ perun_ldap_basedn }}"
            by dn.exact="cn=replication,{{ perun_ldap_basedn }}" read
            by * break
    - name: "LDAP access rule for replication must be first"
      when: perun_ldap_master_replica
      set_fact:
        olcAccess_values: "{{ olcAccess_values + oldAccess_replication }}"
    - name: "LDAP access rules start"
      set_fact:
        olcAccess_values: "{{ olcAccess_values + perun_ldap_access_rules_start }}"
    - name: "additional LDAP access rules"
      set_fact:
        olcAccess_values: "{{ olcAccess_values + perun_ldap_access_rules_additional }}"
    - name: "LDAP access rules end"
      set_fact:
        olcAccess_values: "{{ olcAccess_values + perun_ldap_access_rules_end }}"
    - name: "modify OpenLDAP access rights"
      ldap_attrs:
        dn: olcDatabase={1}mdb,cn=config
        attributes:
          olcAccess: "{{ olcAccess_values }}"
        ordered: yes
        state: exact

- name: "cron job for backup of second LDAP branch with hostel passwords"
  when: perun_ldap_backup_hostel
  cron:
    name: "Everyday do backup of the LDAP hostel branch"
    cron_file: ldap-backup
    hour: "{{ perun_ldap_daily_backup_hour | string }}"
    minute: "{{ perun_ldap_daily_backup_minute | string }}"
    user: root
    job: "umask 027 ; rm /etc/ldap/ldap_db_2_backup.ldif ; /usr/sbin/slapcat -n 2 -l /etc/ldap/ldap_db_2_backup.ldif"

- name: "get OS service facts"
  when: ansible_facts.services['slapd'] is not defined
  service_facts:
